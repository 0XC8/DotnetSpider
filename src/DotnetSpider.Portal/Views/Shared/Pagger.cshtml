
@{
    Layout = null;
    int current = (int)PageData["current"];
    int spitIndex = 0;
    int pageCount = (int)PageData["pageCount"];
    string pageRouter = PageData["pageRouter"];
}
@functions{

    public string GetUrl(int index)
    {
        return pageRouter + index;
    }
}@if (pageCount > 0)
{
    <div class="dataTables_paginate paging_simple_numbers">
        <ul class="pagination">
            <li class="paginate_button"><a>@Html.Raw(current) / @pageCount</a></li>
            @if (current > 1)
            {
                <li class="paginate_button previous"><a href="@GetUrl(current-1)">Previous</a> </li>
}
            @{ spitIndex = current - 2;}
            @if (spitIndex > 4)
            {

                <li class="paginate_button"><a href="@GetUrl(0)">1</a> </li>
                <li class="paginate_button"><a href="@GetUrl(spitIndex - 2)">...</a> </li>
}
            else
            {
                for (int i = 0; i < spitIndex; i++)
                {
                    <li class="paginate_button"><a href="@GetUrl(i)">@Html.Raw(i + 1)</a> </li>
                }
            }
            @for (int i = current - 2; i < current; i++)
            {
                if (i >= current || i < 0)
                {
                    continue;
                }

                <li class="paginate_button"><a href="@GetUrl(i)">@Html.Raw(i + 1)</a> </li>

            }
            <li class="paginate_button active"><a><b>@Html.Raw(current + 1)</b> </a></li>
            @for (int i = current + 1; i < pageCount; i++)
            {
                if (i >= current + 3)
                {
                    break;
                }

                <li class="paginate_button"><a href="@GetUrl(i)">@Html.Raw(i + 1)</a> </li>

            }
            @{ spitIndex = current + 3; }
            @if (pageCount - 4 > spitIndex)
            {
                <li class="paginate_button"><a href="@GetUrl(spitIndex + 2)">...</a> </li>
                <li class="paginate_button"><a href="@GetUrl(pageCount - 1)">@pageCount</a> </li>
}
            else
            {
                for (int i = spitIndex; i < pageCount; i++)
                {

                    <li class="paginate_button"><a href="@GetUrl(i)">@Html.Raw(i + 1)</a> </li>
}
            }
            @if (current != pageCount - 1)
            {

                <li class="paginate_button next"><a href="@GetUrl(current + 1)">Next</a> </li>
            }
        </ul>
    </div>
                }